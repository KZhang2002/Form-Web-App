/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { FormSignature } from './FormSignature';
import {
    FormSignatureFromJSON,
    FormSignatureFromJSONTyped,
    FormSignatureToJSON,
    FormSignatureToJSONTyped,
} from './FormSignature';
import type { FormTemplate } from './FormTemplate';
import {
    FormTemplateFromJSON,
    FormTemplateFromJSONTyped,
    FormTemplateToJSON,
    FormTemplateToJSONTyped,
} from './FormTemplate';
import type { UserInfo } from './UserInfo';
import {
    UserInfoFromJSON,
    UserInfoFromJSONTyped,
    UserInfoToJSON,
    UserInfoToJSONTyped,
} from './UserInfo';
import type { FormContent } from './FormContent';
import {
    FormContentFromJSON,
    FormContentFromJSONTyped,
    FormContentToJSON,
    FormContentToJSONTyped,
} from './FormContent';

/**
 * 
 * @export
 * @interface Form
 */
export interface Form {
    /**
     * 
     * @type {number}
     * @memberof Form
     */
    formId?: number;
    /**
     * 
     * @type {boolean}
     * @memberof Form
     */
    archived?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Form
     */
    published?: boolean;
    /**
     * 
     * @type {Date}
     * @memberof Form
     */
    publishDate?: Date;
    /**
     * 
     * @type {Array<FormContent>}
     * @memberof Form
     */
    formContentSet?: Array<FormContent>;
    /**
     * 
     * @type {Array<FormSignature>}
     * @memberof Form
     */
    formSignatureSet?: Array<FormSignature>;
    /**
     * 
     * @type {FormTemplate}
     * @memberof Form
     */
    formTemplate?: FormTemplate;
    /**
     * 
     * @type {UserInfo}
     * @memberof Form
     */
    userInfo?: UserInfo;
}

/**
 * Check if a given object implements the Form interface.
 */
export function instanceOfForm(value: object): value is Form {
    return true;
}

export function FormFromJSON(json: any): Form {
    return FormFromJSONTyped(json, false);
}

export function FormFromJSONTyped(json: any, ignoreDiscriminator: boolean): Form {
    if (json == null) {
        return json;
    }
    return {
        
        'formId': json['formId'] == null ? undefined : json['formId'],
        'archived': json['archived'] == null ? undefined : json['archived'],
        'published': json['published'] == null ? undefined : json['published'],
        'publishDate': json['publishDate'] == null ? undefined : (new Date(json['publishDate'])),
        'formContentSet': json['formContentSet'] == null ? undefined : ((json['formContentSet'] as Array<any>).map(FormContentFromJSON)),
        'formSignatureSet': json['formSignatureSet'] == null ? undefined : ((json['formSignatureSet'] as Array<any>).map(FormSignatureFromJSON)),
        'formTemplate': json['formTemplate'] == null ? undefined : FormTemplateFromJSON(json['formTemplate']),
        'userInfo': json['userInfo'] == null ? undefined : UserInfoFromJSON(json['userInfo']),
    };
}

export function FormToJSON(json: any): Form {
    return FormToJSONTyped(json, false);
}

export function FormToJSONTyped(value?: Form | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'formId': value['formId'],
        'archived': value['archived'],
        'published': value['published'],
        'publishDate': value['publishDate'] == null ? undefined : ((value['publishDate']).toISOString()),
        'formContentSet': value['formContentSet'] == null ? undefined : ((value['formContentSet'] as Array<any>).map(FormContentToJSON)),
        'formSignatureSet': value['formSignatureSet'] == null ? undefined : ((value['formSignatureSet'] as Array<any>).map(FormSignatureToJSON)),
        'formTemplate': FormTemplateToJSON(value['formTemplate']),
        'userInfo': UserInfoToJSON(value['userInfo']),
    };
}

