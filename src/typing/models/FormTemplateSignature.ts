/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { FormSignature } from './FormSignature';
import {
    FormSignatureFromJSON,
    FormSignatureFromJSONTyped,
    FormSignatureToJSON,
    FormSignatureToJSONTyped,
} from './FormSignature';
import type { FormTemplate } from './FormTemplate';
import {
    FormTemplateFromJSON,
    FormTemplateFromJSONTyped,
    FormTemplateToJSON,
    FormTemplateToJSONTyped,
} from './FormTemplate';

/**
 * 
 * @export
 * @interface FormTemplateSignature
 */
export interface FormTemplateSignature {
    /**
     * 
     * @type {number}
     * @memberof FormTemplateSignature
     */
    id?: number;
    /**
     * 
     * @type {number}
     * @memberof FormTemplateSignature
     */
    level?: number;
    /**
     * 
     * @type {string}
     * @memberof FormTemplateSignature
     */
    title?: string;
    /**
     * 
     * @type {Array<FormSignature>}
     * @memberof FormTemplateSignature
     */
    formSignatureSet?: Array<FormSignature>;
    /**
     * 
     * @type {FormTemplate}
     * @memberof FormTemplateSignature
     */
    formTemplate?: FormTemplate;
}

/**
 * Check if a given object implements the FormTemplateSignature interface.
 */
export function instanceOfFormTemplateSignature(value: object): value is FormTemplateSignature {
    return true;
}

export function FormTemplateSignatureFromJSON(json: any): FormTemplateSignature {
    return FormTemplateSignatureFromJSONTyped(json, false);
}

export function FormTemplateSignatureFromJSONTyped(json: any, ignoreDiscriminator: boolean): FormTemplateSignature {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'level': json['level'] == null ? undefined : json['level'],
        'title': json['title'] == null ? undefined : json['title'],
        'formSignatureSet': json['formSignatureSet'] == null ? undefined : ((json['formSignatureSet'] as Array<any>).map(FormSignatureFromJSON)),
        'formTemplate': json['formTemplate'] == null ? undefined : FormTemplateFromJSON(json['formTemplate']),
    };
}

export function FormTemplateSignatureToJSON(json: any): FormTemplateSignature {
    return FormTemplateSignatureToJSONTyped(json, false);
}

export function FormTemplateSignatureToJSONTyped(value?: FormTemplateSignature | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'level': value['level'],
        'title': value['title'],
        'formSignatureSet': value['formSignatureSet'] == null ? undefined : ((value['formSignatureSet'] as Array<any>).map(FormSignatureToJSON)),
        'formTemplate': FormTemplateToJSON(value['formTemplate']),
    };
}

