/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { FormSignature } from './FormSignature';
import {
    FormSignatureFromJSON,
    FormSignatureFromJSONTyped,
    FormSignatureToJSON,
    FormSignatureToJSONTyped,
} from './FormSignature';
import type { Form } from './Form';
import {
    FormFromJSON,
    FormFromJSONTyped,
    FormToJSON,
    FormToJSONTyped,
} from './Form';
import type { LoginCredential } from './LoginCredential';
import {
    LoginCredentialFromJSON,
    LoginCredentialFromJSONTyped,
    LoginCredentialToJSON,
    LoginCredentialToJSONTyped,
} from './LoginCredential';

/**
 * 
 * @export
 * @interface UserInfo
 */
export interface UserInfo {
    /**
     * 
     * @type {string}
     * @memberof UserInfo
     */
    username?: string;
    /**
     * 
     * @type {boolean}
     * @memberof UserInfo
     */
    admin?: boolean;
    /**
     * 
     * @type {string}
     * @memberof UserInfo
     */
    firstName?: string;
    /**
     * 
     * @type {string}
     * @memberof UserInfo
     */
    lastName?: string;
    /**
     * 
     * @type {number}
     * @memberof UserInfo
     */
    level?: number;
    /**
     * 
     * @type {string}
     * @memberof UserInfo
     */
    title?: string;
    /**
     * 
     * @type {LoginCredential}
     * @memberof UserInfo
     */
    loginCredential?: LoginCredential;
    /**
     * 
     * @type {Array<Form>}
     * @memberof UserInfo
     */
    formSet?: Array<Form>;
    /**
     * 
     * @type {Array<FormSignature>}
     * @memberof UserInfo
     */
    formSignatureSet?: Array<FormSignature>;
}

/**
 * Check if a given object implements the UserInfo interface.
 */
export function instanceOfUserInfo(value: object): value is UserInfo {
    return true;
}

export function UserInfoFromJSON(json: any): UserInfo {
    return UserInfoFromJSONTyped(json, false);
}

export function UserInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserInfo {
    if (json == null) {
        return json;
    }
    return {
        
        'username': json['username'] == null ? undefined : json['username'],
        'admin': json['admin'] == null ? undefined : json['admin'],
        'firstName': json['firstName'] == null ? undefined : json['firstName'],
        'lastName': json['lastName'] == null ? undefined : json['lastName'],
        'level': json['level'] == null ? undefined : json['level'],
        'title': json['title'] == null ? undefined : json['title'],
        'loginCredential': json['loginCredential'] == null ? undefined : LoginCredentialFromJSON(json['loginCredential']),
        'formSet': json['formSet'] == null ? undefined : ((json['formSet'] as Array<any>).map(FormFromJSON)),
        'formSignatureSet': json['formSignatureSet'] == null ? undefined : ((json['formSignatureSet'] as Array<any>).map(FormSignatureFromJSON)),
    };
}

export function UserInfoToJSON(json: any): UserInfo {
    return UserInfoToJSONTyped(json, false);
}

export function UserInfoToJSONTyped(value?: UserInfo | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'username': value['username'],
        'admin': value['admin'],
        'firstName': value['firstName'],
        'lastName': value['lastName'],
        'level': value['level'],
        'title': value['title'],
        'loginCredential': LoginCredentialToJSON(value['loginCredential']),
        'formSet': value['formSet'] == null ? undefined : ((value['formSet'] as Array<any>).map(FormToJSON)),
        'formSignatureSet': value['formSignatureSet'] == null ? undefined : ((value['formSignatureSet'] as Array<any>).map(FormSignatureToJSON)),
    };
}

